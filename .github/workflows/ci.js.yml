# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: "ci/cd pipeline"

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14]


    steps:
    
      - name: "Check out Git repository"
        uses: actions/checkout@v2
      - name: "Use Node.js ${{ matrix.node-version }}"
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
     
      - name: "Cache Node.js modules"
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: "Install application"
        run: npm install

      - name: "Start the Application Server"
        run: npm run development  

      - name: "Show Docker Images"
        run: docker images

      - name: "Show Docker Network"
        run: docker ps
  e2e:
    runs-on: ubuntu-latest
    steps:
      - name: "Check out Git repository"
        uses: actions/checkout@v2
      - name: "Use Node.js 14"
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: "Install application"
        run: npm install
      - name: "Execute end-to-end tests"
        uses: nick-invision/retry@v2
        continue-on-error: true
        with:
          timeout_minutes: 20
          max_attempts: 4
          command: |
            npm run cy:run
  mongodb:
    runs-on: ubuntu-latest
    steps:
      - name: "Check out Git repository"
        uses: actions/checkout@v2
      - name: "Use Node.js 14"
        uses: actions/setup-node@v1
        with:
          node-version: 14
          
      - name: "Deploy an Instance of MongoDB as a container"
        run: docker run -d -p 27017-27019:27017-27019 -v ~/merndb:/data/db --name mernproject mongo:latest  

  # docker-push:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: "Check out Git repository"
  #       uses: actions/checkout@v2
  #     - name: "Use Node.js 14"
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 14
  #     - name: Build and Push Docker Images
  #       uses: mr-smithers-excellent/docker-build-push@v4
  #       with:
  #         image: oren1337/e2e-expensetrack
  #         registry: docker.io
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}  
