# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: "ci/cd pipeline"

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        node-version: [14]


    steps:
      - name: "Check out Git repository"
        uses: actions/checkout@v2
      - name: "Use Node.js ${{ matrix.node-version }}"
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: "Cache Node.js modules"
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: "Install application"
        run: npm install

      - name: "Build the application"
        run: npm run build  

      - name: Build and Push Docker Images
        uses: mr-smithers-excellent/docker-build-push@v4
        with:
          image: oren1337/e2e-expensetrack
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}  
# services:
#   web:
#     image: apache
#     build: ./webapp
#     container_name: apache
#     restart: always
#     # we can see the server running at "localhost:8080"
#     ports:
#       - "3000:80"

#   e2e:
#     image: cypress
#     build: ./e2e
#     container_name: cypress
#     depends_on:
#       - web
#     # note: inside e2e container, the network allows accessing
#     # "web" host under name "web"
#     # so "curl http://web" would return whatever the webserver
#     # in the "web" container is cooking
#     # see https://docs.docker.com/compose/networking/
#     environment:
#       - CYPRESS_baseUrl=http://web
#     command: npx cypress run
#     # mount the host directory e2e/cypress and the file e2e/cypress.json as
#     # volumes within the container
#     # this means that:
#     #  1. anything that Cypress writes to these folders (e.g., screenshots,
#     #     videos) appears also on the Docker host's filesystem
#     #  2. any change that the developer applies to Cypress files on the host
#     #     machine immediately takes effect within the e2e container (no docker
#     #     rebuild required).
#     volumes:
#       - ./e2e/cypress:/app/cypress
#       - ./e2e/cypress.json:/app/cypress.json
